name: Laravel CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo_mysql, dom, gd, imagick, zip
        ini-values: post_max_size=256M, upload_max_filesize=256M
        tools: composer

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Copy .env
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Create database (SQLite)
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Run migrations
      run: php artisan migrate --force

    - name: Install PHP CodeSniffer for linting
      run: composer require --dev squizlabs/php_codesniffer

    - name: Run PHP CodeSniffer (Linting)
      run: |
        if ./vendor/bin/phpcs --report=checkstyle --report-file=phpcs-report.xml; then
          echo "‚úÖ PHP CodeSniffer passed"
        else
          echo "‚ö†Ô∏è PHP CodeSniffer found issues, but continuing..."
        fi

    - name: Run PHP Stan (Static Analysis)
      run: |
        composer require --dev phpstan/phpstan
        if ./vendor/bin/phpstan analyse --configuration=phpstan.neon --error-format=checkstyle > phpstan-report.xml; then
          echo "‚úÖ PHPStan analysis passed"
        else
          echo "‚ö†Ô∏è PHPStan found issues, but continuing..."
        fi

    - name: Install Local PHP Security Checker
      run: |
        curl -L https://github.com/fabpot/local-php-security-checker/releases/download/v2.0.6/local-php-security-checker_2.0.6_linux_amd64 -o local-php-security-checker
        chmod +x local-php-security-checker

    - name: Run Security Audit (Local PHP Security Checker)
      run: |
        if ./local-php-security-checker --format=json --output=security-report.json; then
          echo "‚úÖ Security check passed"
        else
          echo "‚ö†Ô∏è Security issues found, but continuing..."
        fi

    - name: Run Composer Security Audit
      run: |
        if composer audit --format=json > composer-audit.json; then
          echo "‚úÖ Composer audit passed"
        else
          echo "‚ö†Ô∏è Composer audit found issues, but continuing..."
        fi

    - name: Install and Run PHPStan Security Analysis
      run: |
        composer require --dev phpstan/phpstan-symfony
        if ./vendor/bin/phpstan analyse --configuration=phpstan.neon --error-format=json > phpstan-security.json; then
          echo "‚úÖ PHPStan security analysis passed"
        else
          echo "‚ö†Ô∏è PHPStan security analysis found issues, but continuing..."
        fi

    - name: Run tests with coverage
      run: php artisan test --coverage --coverage-clover=coverage.xml

    - name: Prepare SonarCloud reports
      run: |
        # Ensure report files exist (create empty ones if they don't)
        touch phpcs-report.xml phpstan-report.xml security-report.json composer-audit.json
        # List files for debugging
        ls -la *.xml *.json || true

    - name: SonarCloud Scan
      if: github.ref == 'refs/heads/main'
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Notify success
      if: success()
      env:
        GOOGLE_CHAT_WEBHOOK: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
      run: |
        curl -X POST \
        -H "Content-Type: application/json" \
        -d '{
          "text": "‚úÖ *Laravel CI Pipeline PASSED* ‚úÖ\n\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Commit Message:* ${{ github.event.head_commit.message }}\n*Author:* ${{ github.actor }}\n*Workflow:* ${{ github.workflow }}\n*Run ID:* ${{ github.run_id }}\n\nüéâ All tests passed successfully!"
        }' \
        "$GOOGLE_CHAT_WEBHOOK"

    - name: Notify failure
      if: failure()
      env:
        GOOGLE_CHAT_WEBHOOK: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
      run: |
        curl -X POST \
        -H "Content-Type: application/json" \
        -d '{
          "text": "‚ùå *Laravel CI Pipeline FAILED* ‚ùå\n\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Commit Message:* ${{ github.event.head_commit.message }}\n*Author:* ${{ github.actor }}\n*Workflow:* ${{ github.workflow }}\n*Run ID:* ${{ github.run_id }}\n\nüí• Pipeline failed. Please check the logs for details.\n\n[View Run Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        }' \
        "$GOOGLE_CHAT_WEBHOOK"